--- a/src/graph.c
+++ b/src/graph.c
@@ -82,6 +82,11 @@ static void mst_kruskal(void) {
 		c->status.mst = false;
 	}
 
+	for(node = edge_weight_tree->head; node; node = node->next) {
+		e = node->data;
+		e->mst = false;
+	}
+
 	/* Do we have something to do at all? */
 
 	if(!edge_weight_tree->head) {
@@ -122,6 +127,8 @@ static void mst_kruskal(void) {
 
 		e->from->status.visited = true;
 		e->to->status.visited = true;
+		e->mst = true;
+		e->reverse->mst = true;
 
 		if(e->connection) {
 			e->connection->status.mst = true;
@@ -366,7 +373,7 @@ void dump_graph(void) {
 	/* now dump all edges */
 	for(node = edge_weight_tree->head; node; node = node->next) {
 		e = node->data;
-		fprintf(file, "	\"%s\" -> \"%s\";\n", e->from->name, e->to->name);
+		fprintf(file, "	\"%s\" -> \"%s\"; // weight %d, conn mst %d, edge msg %d\n", e->from->name, e->to->name, e->weight, (e->connection ? e->connection->status.mst : -1), e->mst);
 	}
 
 	fprintf(file, "}\n");
--- a/src/edge.h
+++ b/src/edge.h
@@ -33,6 +33,7 @@ typedef struct edge_t {
 
 	uint32_t options;                /* options turned on for this edge */
 	int weight;                      /* weight of this edge */
+	int mst;
 
 	struct connection_t *connection; /* connection associated with this edge, if available */
 	struct edge_t *reverse;          /* edge in the opposite direction, if available */
